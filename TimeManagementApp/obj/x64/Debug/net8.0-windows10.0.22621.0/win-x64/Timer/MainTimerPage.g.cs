#pragma checksum "D:\Code\Projects\Window-TimeManagementApp\TimeManagementApp\Timer\MainTimerPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "EC7BA6F64128CBF72FAE36BFB5EF65AC3394B14CC232623E179DDFE3404C039A"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeManagementApp.Timer
{
    partial class MainTimerPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Shapes_Shape_Stroke(global::Microsoft.UI.Xaml.Shapes.Shape obj, global::Microsoft.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.Brush) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Stroke = value;
            }
            public static void Set_Microsoft_UI_Xaml_Shapes_Shape_StrokeThickness(global::Microsoft.UI.Xaml.Shapes.Shape obj, global::System.Double value)
            {
                obj.StrokeThickness = value;
            }
            public static void Set_Microsoft_UI_Xaml_Shapes_Shape_StrokeDashArray(global::Microsoft.UI.Xaml.Shapes.Shape obj, global::Microsoft.UI.Xaml.Media.DoubleCollection value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.DoubleCollection) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.DoubleCollection), targetNullValue);
                }
                obj.StrokeDashArray = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class MainTimerPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IMainTimerPage_Bindings
        {
            private global::TimeManagementApp.Timer.MainTimerPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Slider obj7;
            private global::Microsoft.UI.Xaml.Controls.Slider obj8;
            private global::Microsoft.UI.Xaml.Controls.Slider obj9;
            private global::Microsoft.UI.Xaml.Shapes.Ellipse obj15;
            private global::Microsoft.UI.Xaml.Shapes.Ellipse obj16;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj17;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj18;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7ValueDisabled = false;
            private static bool isobj8ValueDisabled = false;
            private static bool isobj9ValueDisabled = false;
            private static bool isobj15StrokeDisabled = false;
            private static bool isobj15StrokeThicknessDisabled = false;
            private static bool isobj16StrokeThicknessDisabled = false;
            private static bool isobj16StrokeDashArrayDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18TextDisabled = false;

            private MainTimerPage_obj1_BindingsTracking bindingsTracking;

            public MainTimerPage_obj1_Bindings()
            {
                this.bindingsTracking = new MainTimerPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 99 && columnNumber == 25)
                {
                    isobj7ValueDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 25)
                {
                    isobj8ValueDisabled = true;
                }
                else if (lineNumber == 81 && columnNumber == 25)
                {
                    isobj9ValueDisabled = true;
                }
                else if (lineNumber == 26 && columnNumber == 26)
                {
                    isobj15StrokeDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 26)
                {
                    isobj15StrokeThicknessDisabled = true;
                }
                else if (lineNumber == 31 && columnNumber == 26)
                {
                    isobj16StrokeThicknessDisabled = true;
                }
                else if (lineNumber == 32 && columnNumber == 26)
                {
                    isobj16StrokeDashArrayDisabled = true;
                }
                else if (lineNumber == 40 && columnNumber == 28)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 28)
                {
                    isobj18TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // Timer\MainTimerPage.xaml line 98
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                        break;
                    case 8: // Timer\MainTimerPage.xaml line 89
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                        break;
                    case 9: // Timer\MainTimerPage.xaml line 80
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                        break;
                    case 15: // Timer\MainTimerPage.xaml line 26
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Ellipse>(target);
                        break;
                    case 16: // Timer\MainTimerPage.xaml line 30
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Ellipse>(target);
                        break;
                    case 17: // Timer\MainTimerPage.xaml line 40
                        this.obj17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 18: // Timer\MainTimerPage.xaml line 42
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMainTimerPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::TimeManagementApp.Timer.MainTimerPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TimeManagementApp.Timer.MainTimerPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::TimeManagementApp.Timer.PomodoroTimer obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CurrentSettings(obj.CurrentSettings, phase);
                        this.Update_ViewModel_StrokeColor(obj.StrokeColor, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_StrokeThickness(obj.StrokeThickness, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_StrokeDashArray(obj.StrokeDashArray, phase);
                        this.Update_ViewModel_TimerText(obj.TimerText, phase);
                        this.Update_ViewModel_CurrentType(obj.CurrentType, phase);
                    }
                }
            }
            private void Update_ViewModel_CurrentSettings(global::TimeManagementApp.Timer.Settings obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_CurrentSettings(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CurrentSettings_LongBreakMinutes(obj.LongBreakMinutes, phase);
                        this.Update_ViewModel_CurrentSettings_ShortBreakMinutes(obj.ShortBreakMinutes, phase);
                        this.Update_ViewModel_CurrentSettings_FocusTimeMinutes(obj.FocusTimeMinutes, phase);
                    }
                }
            }
            private void Update_ViewModel_CurrentSettings_LongBreakMinutes(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Timer\MainTimerPage.xaml line 98
                    if (!isobj7ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj7, obj);
                    }
                }
            }
            private void Update_ViewModel_CurrentSettings_ShortBreakMinutes(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Timer\MainTimerPage.xaml line 89
                    if (!isobj8ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj8, obj);
                    }
                }
            }
            private void Update_ViewModel_CurrentSettings_FocusTimeMinutes(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Timer\MainTimerPage.xaml line 80
                    if (!isobj9ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj9, obj);
                    }
                }
            }
            private void Update_ViewModel_StrokeColor(global::Microsoft.UI.Xaml.Media.Brush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Timer\MainTimerPage.xaml line 26
                    if (!isobj15StrokeDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Shapes_Shape_Stroke(this.obj15, obj, null);
                    }
                }
            }
            private void Update_ViewModel_StrokeThickness(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Timer\MainTimerPage.xaml line 26
                    if (!isobj15StrokeThicknessDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Shapes_Shape_StrokeThickness(this.obj15, obj);
                    }
                    // Timer\MainTimerPage.xaml line 30
                    if (!isobj16StrokeThicknessDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Shapes_Shape_StrokeThickness(this.obj16, obj);
                    }
                }
            }
            private void Update_ViewModel_StrokeDashArray(global::Microsoft.UI.Xaml.Media.DoubleCollection obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Timer\MainTimerPage.xaml line 30
                    if (!isobj16StrokeDashArrayDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Shapes_Shape_StrokeDashArray(this.obj16, obj, null);
                    }
                }
            }
            private void Update_ViewModel_TimerText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Timer\MainTimerPage.xaml line 40
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CurrentType(global::TimeManagementApp.Timer.TimerType obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Timer\MainTimerPage.xaml line 42
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj.ToString(), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MainTimerPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<MainTimerPage_obj1_Bindings> weakRefToBindingObj; 

                public MainTimerPage_obj1_BindingsTracking(MainTimerPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MainTimerPage_obj1_Bindings>(obj);
                }

                public MainTimerPage_obj1_Bindings TryGetBindingObject()
                {
                    MainTimerPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_CurrentSettings(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainTimerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::TimeManagementApp.Timer.PomodoroTimer obj = sender as global::TimeManagementApp.Timer.PomodoroTimer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_CurrentSettings(obj.CurrentSettings, DATA_CHANGED);
                                bindings.Update_ViewModel_StrokeColor(obj.StrokeColor, DATA_CHANGED);
                                bindings.Update_ViewModel_StrokeDashArray(obj.StrokeDashArray, DATA_CHANGED);
                                bindings.Update_ViewModel_TimerText(obj.TimerText, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentType(obj.CurrentType, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CurrentSettings":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSettings(obj.CurrentSettings, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StrokeColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StrokeColor(obj.StrokeColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StrokeDashArray":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_StrokeDashArray(obj.StrokeDashArray, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TimerText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TimerText(obj.TimerText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentType":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentType(obj.CurrentType, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TimeManagementApp.Timer.PomodoroTimer cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::TimeManagementApp.Timer.PomodoroTimer obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_CurrentSettings(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainTimerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::TimeManagementApp.Timer.Settings obj = sender as global::TimeManagementApp.Timer.Settings;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_CurrentSettings_LongBreakMinutes(obj.LongBreakMinutes, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentSettings_ShortBreakMinutes(obj.ShortBreakMinutes, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentSettings_FocusTimeMinutes(obj.FocusTimeMinutes, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "LongBreakMinutes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSettings_LongBreakMinutes(obj.LongBreakMinutes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ShortBreakMinutes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSettings_ShortBreakMinutes(obj.ShortBreakMinutes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FocusTimeMinutes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentSettings_FocusTimeMinutes(obj.FocusTimeMinutes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TimeManagementApp.Timer.Settings cache_ViewModel_CurrentSettings = null;
                public void UpdateChildListeners_ViewModel_CurrentSettings(global::TimeManagementApp.Timer.Settings obj)
                {
                    if (obj != cache_ViewModel_CurrentSettings)
                    {
                        if (cache_ViewModel_CurrentSettings != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_CurrentSettings).PropertyChanged -= PropertyChanged_ViewModel_CurrentSettings;
                            cache_ViewModel_CurrentSettings = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_CurrentSettings = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_CurrentSettings;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Timer\MainTimerPage.xaml line 21
                {
                    this.TimerPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 3: // Timer\MainTimerPage.xaml line 66
                {
                    this.SettingsPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 4: // Timer\MainTimerPage.xaml line 113
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element4).Click += this.SaveButton_Click;
                }
                break;
            case 5: // Timer\MainTimerPage.xaml line 114
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element5).Click += this.CloseButton_Click;
                }
                break;
            case 6: // Timer\MainTimerPage.xaml line 107
                {
                    this.NotificationToggleSwitch = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ToggleSwitch>(target);
                }
                break;
            case 7: // Timer\MainTimerPage.xaml line 98
                {
                    this.LongBreakSlider = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            case 8: // Timer\MainTimerPage.xaml line 89
                {
                    this.ShortBreakSlider = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            case 9: // Timer\MainTimerPage.xaml line 80
                {
                    this.FocusTimeSlider = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            case 10: // Timer\MainTimerPage.xaml line 57
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element10).Click += this.SkipButton_Click;
                }
                break;
            case 11: // Timer\MainTimerPage.xaml line 58
                {
                    this.SettingsButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.SettingsButton).Click += this.SettingsButton_Click;
                }
                break;
            case 12: // Timer\MainTimerPage.xaml line 49
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element12).Click += this.StartButton_Click;
                }
                break;
            case 13: // Timer\MainTimerPage.xaml line 50
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element13).Click += this.PauseButton_Click;
                }
                break;
            case 14: // Timer\MainTimerPage.xaml line 51
                {
                    global::Microsoft.UI.Xaml.Controls.AppBarButton element14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)element14).Click += this.ResetButton_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2409")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Timer\MainTimerPage.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    MainTimerPage_obj1_Bindings bindings = new MainTimerPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

