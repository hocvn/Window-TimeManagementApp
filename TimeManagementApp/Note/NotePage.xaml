<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="TimeManagementApp.Note.NotePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TimeManagementApp.Note"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Loaded="NotePage_Loaded"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <!-- Get style from system and adjust for this app, avoid create changes in default style of system 
        https://learn.microsoft.com/en-us/answers/questions/119607/uwp-togglebutton-change-backgound-color -->
    
    <Page.Resources>
        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrush}" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="-3" />
            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <revealBrushPresent:Setter Target="RootGrid.(media:RevealBrush.State)" Value="PointerOver" xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPointerOver}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPointerOver}" />

                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <revealBrushPresent:Setter Target="RootGrid.(media:RevealBrush.State)" Value="Pressed" xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPressed}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPressed}" />

                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundDisabled}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushDisabled}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundDisabled}" />

                                        </VisualState.Setters>
                                    </VisualState>

                                    <VisualState x:Name="Checked">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="CornflowerBlue" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushChecked}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}" />

                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <VisualState.Setters>
                                            <revealBrushPresent:Setter Target="RootGrid.(media:RevealBrush.State)" Value="PointerOver" xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedPointerOver}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />

                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <VisualState.Setters>
                                            <revealBrushPresent:Setter Target="RootGrid.(media:RevealBrush.State)" Value="Pressed" xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedPressed}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}" />

                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedDisabled}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedDisabled}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />

                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminate}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminate}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminate}" />

                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <VisualState.Setters>
                                            <revealBrushPresent:Setter Target="RootGrid.(media:RevealBrush.State)" Value="PointerOver" xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminatePointerOver}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}" />

                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <VisualState.Setters>
                                            <revealBrushPresent:Setter Target="RootGrid.(media:RevealBrush.State)" Value="Pressed" xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminatePressed}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}" />

                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminateDisabled}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminateDisabled}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}" />

                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <RelativePanel Margin="0 2" HorizontalAlignment="Stretch">

            <RelativePanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
            </RelativePanel.Resources>
            <Button x:Name="BackButton" Click="BackButton_Click" AutomationProperties.Name="Back" ToolTipService.ToolTip="Back">
                <Button.Content>
                    <FontIcon Glyph="&#xE72B;"/>
                </Button.Content>
            </Button>
            <Button x:Name="SaveButton" Click="SaveButton_Click" AutomationProperties.Name="Save" ToolTipService.ToolTip="Save" 
                RelativePanel.RightOf="BackButton">
                <Button.Content>
                    <FontIcon Glyph="&#xE74E;"/>
                </Button.Content>
            </Button>

            <Button x:Name="DeleteButton" Click="DeleteButton_Click" AutomationProperties.Name="Delete" ToolTipService.ToolTip="Delete" 
                RelativePanel.RightOf="SaveButton">
                <Button.Content>
                    <FontIcon Glyph="&#xE74D;"/>
                </Button.Content>
            </Button>

            <TextBox x:Name="NoteNameTextBox" 
                     Margin="20 0"
                     RelativePanel.RightOf="DeleteButton"
                     RelativePanel.LeftOf="BoldButton"
                     RelativePanel.AlignHorizontalCenterWithPanel="True"
                     LostFocus="NoteName_LostFocus"
                     Text="{x:Bind ViewModel.Note.Name, Mode=TwoWay}"/>

            <ToggleButton x:Name="BoldButton" AutomationProperties.Name="Bold" ToolTipService.ToolTip="Bold" Click="BoldButton_Click"
                          RelativePanel.LeftOf="ItalicButton" Style="{StaticResource ToggleButtonStyle}">
                <ToggleButton.Content>
                    <FontIcon Glyph="&#xE8DD;" FontSize="16"/>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton x:Name="ItalicButton" Click="ItalicButton_Click" AutomationProperties.Name="Italic" ToolTipService.ToolTip="Italic"
                RelativePanel.LeftOf="UnderlineButton" Style="{StaticResource ToggleButtonStyle}">
                <ToggleButton.Content>
                    <FontIcon Glyph="&#xE8DB;" FontSize="16"/>
                </ToggleButton.Content>
            </ToggleButton>
            <ToggleButton x:Name="UnderlineButton" AutomationProperties.Name="UnderlineButton" ToolTipService.ToolTip="Underline" Click="UnderlineButton_Click"
                RelativePanel.LeftOf="FontColorButton" Style="{StaticResource ToggleButtonStyle}">
                <ToggleButton.Content>
                    <FontIcon Glyph="&#xE8DC;" FontSize="16"/>
                </ToggleButton.Content>
            </ToggleButton>

            <DropDownButton x:Name="FontColorButton" AutomationProperties.Name="Font color"
                                BorderThickness="0" ToolTipService.ToolTip="Font color"
                                Background="Transparent"
                                RelativePanel.AlignRightWithPanel="True">
                <SymbolIcon Symbol="FontColor"/>
                <DropDownButton.Flyout>
                    <Flyout Placement="Bottom">
                        <VariableSizedWrapGrid Orientation="Horizontal" MaximumRowsOrColumns="3">
                            <VariableSizedWrapGrid.Resources>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Width" Value="24"/>
                                    <Setter Property="Height" Value="24"/>
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="MinHeight" Value="0"/>
                                    <Setter Property="Margin" Value="4"/>
                                </Style>
                            </VariableSizedWrapGrid.Resources>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Red">
                                <Button.Content>
                                    <Rectangle Fill="Red"/>
                                </Button.Content>
                            </Button>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Orange">
                                <Button.Content>
                                    <Rectangle Fill="Orange"/>
                                </Button.Content>
                            </Button>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Yellow">
                                <Button.Content>
                                    <Rectangle Fill="Yellow"/>
                                </Button.Content>
                            </Button>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Green">
                                <Button.Content>
                                    <Rectangle Fill="Green"/>
                                </Button.Content>
                            </Button>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Blue">
                                <Button.Content>
                                    <Rectangle Fill="Blue"/>
                                </Button.Content>
                            </Button>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Indigo">
                                <Button.Content>
                                    <Rectangle Fill="Indigo"/>
                                </Button.Content>
                            </Button>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Violet">
                                <Button.Content>
                                    <Rectangle Fill="Violet"/>
                                </Button.Content>
                            </Button>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Gray">
                                <Button.Content>
                                    <Rectangle Fill="Gray"/>
                                </Button.Content>
                            </Button>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Gray">
                                <Button.Content>
                                    <Rectangle Fill="Black"/>
                                </Button.Content>
                            </Button>
                            <Button Click="ColorButton_Click" AutomationProperties.Name="Gray">
                                <Button.Content>
                                    <Rectangle Fill="White"/>
                                </Button.Content>
                            </Button>
                        </VariableSizedWrapGrid>
                    </Flyout>
                </DropDownButton.Flyout>
            </DropDownButton>

            <Rectangle x:Name="RecColor" RadiusX="2" RadiusY="2"
                Width="18" Height="8"
                Fill="{x:Bind ViewModel.CurrentColor, Mode=OneWay}" Margin="0 17 32 0"
                RelativePanel.AlignRightWithPanel="True"/>
        </RelativePanel>

        <RichEditBox x:Name="Editor" Grid.Row="1"        
                    IsSpellCheckEnabled="False"
                    ScrollViewer.VerticalScrollMode="Auto"
                    TextChanged="Editor_TextChanged"
                    GotFocus="Editor_GotFocus">
        </RichEditBox>
    </Grid>
</Page>
